const { authorDevCode, currentDate, authorFullName } = require("./variables");

const templateDefinition = {
  entityName: "EntityName",
};

const template = `/*
* Description: This file is used to define the data repository for the {{entityName}} entity.
* This file is generated by the JFW Code Generator from a template file.
* If you want to modify this file content, you should modify the template file instead.
* Author: ${authorFullName}.
* History:
* - ${currentDate}: Created - ${authorDevCode}.
*/

using Jfw.DataAccess.Implements;
using Jfw.DataAccess.Interfaces;
using Jfw.Models.Entities.Interfaces;

namespace Jfw.Repositories.Implements
{
    /// <summary>
    /// Defines repository for the {{entityName}} entity.
    /// </summary>
    public partial class {{entityName}}Repository : BaseRepository<I{{entityName}}Entity, I{{entityName}}Dao>
    {
        /// <summary>
        /// Gets or sets the default data accessor.
        /// </summary>
        protected override I{{entityName}}Dao DataAccessor { get; set; }

        /// <summary>
        /// Default constructor.
        /// </summary>
        public {{entityName}}Repository() : base()
        {
            DataAccessor = new {{entityName}}Dao();
        }
    }
}
`;

const implementTemplate = `/*
* Description: This file is used to define the data repository for the {{entityName}} entity.
* Author: ${authorFullName}.
* History:
* - ${currentDate}: Created - ${authorDevCode}.
*/

using Jfw.Repositories.Interfaces;

namespace Jfw.Repositories.Implements
{
    public partial class {{entityName}}Repository : I{{entityName}}Repository
    {
        // Adds custom methods here.
    }
}
`;
module.exports = { template, implementTemplate, templateDefinition };
